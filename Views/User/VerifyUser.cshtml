@model TaskManagementSystem.Models.UserVerifyViewModel
@{
    ViewData["Title"] = "VerifyUser";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="row shadow-lg  p-3 mb-5 rounded">
    <div class="col-lg-6 d-none d-lg-block">
        <img src="~/Images/VerifyUser.jpg" class="img-fluid" />
    </div>
    <div class="col-lg-6">
        @if (ViewBag.Error != null)
        {
            <p class="text-danger">@ViewBag.Error</p>
        }
        <h1>Verify User</h1>
        <p class="display-6">An OTP is sent to your email</p>
        <form class="row g-3" asp-controller="User" asp-action="VerifyUser">
            <div class="col-12">
                <label asp-for="Pin" class="form-label">Pin</label>
                <input class="form-control" asp-for="Pin">
                <span asp-validation-for="Pin" class="text-danger"></span>
                @if (@TempData["incorrectPin"] != null)
                {
                    <span class="text-danger fw-bold">@TempData["incorrectPin"]</span>
                }
            </div>
            <div class="col-12">
                <button type="submit" class="btn btn-primary">Sign in</button>
                <button id="resend-btn" class="btn btn-outline-dark" onclick="disableResendButton()">
                    Resend
                </button>
                <p id="timer-msg" class="text-danger mt-2" style="display: none;">Please wait <span id="timer">30</span> seconds to resend.</p>
            </div>
        </form>
        
    </div>
</div>

<script>
    function disableResendButton() {
        $.ajax({
            type:'POST',
            url:'@Url.Action("ResendVerification")', /* Home/Add */
            data:{},
            dataType:'text', /* dataType:'json', */
            success: function(response,status,xhr){
                console.log("Email resent successfully",response);
            },
            error:function(req,status,error){
                console.log("Error occured while sending email",error);
            }
        });

        const resendButton = document.getElementById('resend-btn');
        const timerMsg = document.getElementById('timer-msg');
        const timerSpan = document.getElementById('timer');

        // Disable the button
        resendButton.disabled = true;

        // Show the timer message
        timerMsg.style.display = 'block';

        // Timer countdown (30 seconds)
        let secondsLeft = 30;
        const interval = setInterval(() => {
            secondsLeft--;
            timerSpan.textContent = secondsLeft;

            if (secondsLeft <= 0) {
                clearInterval(interval);
                // Enable the button after the countdown
                resendButton.disabled = false;
                timerMsg.style.display = 'none';
            }
        }, 1000);
    }
</script>